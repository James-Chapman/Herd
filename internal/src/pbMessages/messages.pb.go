// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/src/pbMessages/messages.proto

package pbMessages

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloRequest struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Fqdn                 string   `protobuf:"bytes,3,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *HelloRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *HelloRequest) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

type HelloResponse struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{1}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// Heartbeat service (ping/pong)
type Ping struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{2}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Pong struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{3}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Work service (workRequest/workResponse)
type WorkRequest struct {
	JobID                int32    `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Job                  []byte   `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkRequest) Reset()         { *m = WorkRequest{} }
func (m *WorkRequest) String() string { return proto.CompactTextString(m) }
func (*WorkRequest) ProtoMessage()    {}
func (*WorkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{4}
}

func (m *WorkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkRequest.Unmarshal(m, b)
}
func (m *WorkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkRequest.Marshal(b, m, deterministic)
}
func (m *WorkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkRequest.Merge(m, src)
}
func (m *WorkRequest) XXX_Size() int {
	return xxx_messageInfo_WorkRequest.Size(m)
}
func (m *WorkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkRequest proto.InternalMessageInfo

func (m *WorkRequest) GetJobID() int32 {
	if m != nil {
		return m.JobID
	}
	return 0
}

func (m *WorkRequest) GetJob() []byte {
	if m != nil {
		return m.Job
	}
	return nil
}

type WorkResponse struct {
	JobID                int32    `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkResponse) Reset()         { *m = WorkResponse{} }
func (m *WorkResponse) String() string { return proto.CompactTextString(m) }
func (*WorkResponse) ProtoMessage()    {}
func (*WorkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{5}
}

func (m *WorkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkResponse.Unmarshal(m, b)
}
func (m *WorkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkResponse.Marshal(b, m, deterministic)
}
func (m *WorkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkResponse.Merge(m, src)
}
func (m *WorkResponse) XXX_Size() int {
	return xxx_messageInfo_WorkResponse.Size(m)
}
func (m *WorkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkResponse proto.InternalMessageInfo

func (m *WorkResponse) GetJobID() int32 {
	if m != nil {
		return m.JobID
	}
	return 0
}

func (m *WorkResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

// Stdout & Errout (requestStdOut/responseStdOut)
type RequestStdOut struct {
	JobID                int32    `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestStdOut) Reset()         { *m = RequestStdOut{} }
func (m *RequestStdOut) String() string { return proto.CompactTextString(m) }
func (*RequestStdOut) ProtoMessage()    {}
func (*RequestStdOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{6}
}

func (m *RequestStdOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestStdOut.Unmarshal(m, b)
}
func (m *RequestStdOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestStdOut.Marshal(b, m, deterministic)
}
func (m *RequestStdOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestStdOut.Merge(m, src)
}
func (m *RequestStdOut) XXX_Size() int {
	return xxx_messageInfo_RequestStdOut.Size(m)
}
func (m *RequestStdOut) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestStdOut.DiscardUnknown(m)
}

var xxx_messageInfo_RequestStdOut proto.InternalMessageInfo

func (m *RequestStdOut) GetJobID() int32 {
	if m != nil {
		return m.JobID
	}
	return 0
}

type ResponseStdOut struct {
	JobID                int32    `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseStdOut) Reset()         { *m = ResponseStdOut{} }
func (m *ResponseStdOut) String() string { return proto.CompactTextString(m) }
func (*ResponseStdOut) ProtoMessage()    {}
func (*ResponseStdOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b30b43b8942386, []int{7}
}

func (m *ResponseStdOut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseStdOut.Unmarshal(m, b)
}
func (m *ResponseStdOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseStdOut.Marshal(b, m, deterministic)
}
func (m *ResponseStdOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseStdOut.Merge(m, src)
}
func (m *ResponseStdOut) XXX_Size() int {
	return xxx_messageInfo_ResponseStdOut.Size(m)
}
func (m *ResponseStdOut) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseStdOut.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseStdOut proto.InternalMessageInfo

func (m *ResponseStdOut) GetJobID() int32 {
	if m != nil {
		return m.JobID
	}
	return 0
}

func (m *ResponseStdOut) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "messages.helloRequest")
	proto.RegisterType((*HelloResponse)(nil), "messages.helloResponse")
	proto.RegisterType((*Ping)(nil), "messages.ping")
	proto.RegisterType((*Pong)(nil), "messages.pong")
	proto.RegisterType((*WorkRequest)(nil), "messages.workRequest")
	proto.RegisterType((*WorkResponse)(nil), "messages.workResponse")
	proto.RegisterType((*RequestStdOut)(nil), "messages.requestStdOut")
	proto.RegisterType((*ResponseStdOut)(nil), "messages.responseStdOut")
}

func init() {
	proto.RegisterFile("internal/src/pbMessages/messages.proto", fileDescriptor_d3b30b43b8942386)
}

var fileDescriptor_d3b30b43b8942386 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xcd, 0x4b, 0x3b, 0x31,
	0x10, 0xed, 0xf7, 0xef, 0xd7, 0x71, 0x5b, 0x4a, 0xd0, 0xba, 0xec, 0xa9, 0x04, 0x94, 0x7a, 0xb0,
	0x85, 0x8a, 0x08, 0xc5, 0x8b, 0x22, 0x52, 0x45, 0x11, 0xb6, 0x07, 0xc1, 0x5b, 0xb6, 0x8d, 0xed,
	0xf6, 0x23, 0x49, 0x93, 0x6c, 0xfd, 0xf7, 0x65, 0xb3, 0x89, 0x2d, 0xea, 0x7a, 0x7b, 0x6f, 0x26,
	0xf3, 0xde, 0x24, 0x2f, 0x70, 0x1a, 0x33, 0x4d, 0x25, 0x23, 0xab, 0xbe, 0x92, 0x93, 0xbe, 0x88,
	0x9e, 0xa9, 0x52, 0x64, 0x46, 0x55, 0x7f, 0x6d, 0x41, 0x4f, 0x48, 0xae, 0x39, 0xfa, 0xef, 0x38,
	0x7e, 0x02, 0x6f, 0x4e, 0x57, 0x2b, 0x1e, 0xd2, 0x4d, 0x42, 0x95, 0x46, 0x3e, 0xfc, 0xdb, 0x52,
	0xa9, 0x62, 0xce, 0xfc, 0x62, 0xa7, 0xd8, 0xad, 0x86, 0x8e, 0xa2, 0x26, 0x94, 0x62, 0xe1, 0x97,
	0x3a, 0xc5, 0x6e, 0x3d, 0x2c, 0xc5, 0x02, 0x21, 0xa8, 0xbc, 0x6f, 0xa6, 0xcc, 0x2f, 0x9b, 0x8a,
	0xc1, 0xf8, 0x0c, 0x1a, 0x56, 0x4d, 0x09, 0xce, 0x14, 0xcd, 0x97, 0xc3, 0x01, 0x54, 0x44, 0xcc,
	0x66, 0xa9, 0x0c, 0x23, 0x6b, 0x6a, 0xda, 0xf5, 0xd0, 0x60, 0xd3, 0xe3, 0x39, 0xbd, 0x4b, 0x38,
	0xf8, 0xe0, 0x72, 0xe9, 0xf6, 0x3d, 0x84, 0xea, 0x82, 0x47, 0x0f, 0x77, 0x56, 0x3e, 0x23, 0xa8,
	0x05, 0xe5, 0x05, 0x8f, 0xcc, 0xb2, 0x5e, 0x98, 0x42, 0x7c, 0x0d, 0x5e, 0x36, 0x66, 0x17, 0xfb,
	0x7d, 0xae, 0x0d, 0x35, 0x9e, 0x68, 0x91, 0x68, 0x7b, 0x4f, 0xcb, 0xf0, 0x09, 0x34, 0x64, 0x66,
	0x38, 0xd6, 0xd3, 0x97, 0x24, 0xc7, 0x16, 0x0f, 0xa1, 0x29, 0xad, 0xc1, 0x5f, 0xe7, 0xd2, 0x7b,
	0x4d, 0x89, 0x26, 0xd6, 0xc4, 0xe0, 0xc1, 0xa3, 0x0d, 0x62, 0x4c, 0xe5, 0x36, 0x9e, 0x50, 0x34,
	0x84, 0xea, 0x28, 0xe5, 0xa8, 0xdd, 0xfb, 0x0a, 0x6f, 0x3f, 0xa9, 0xe0, 0xf8, 0x47, 0x3d, 0x73,
	0xc6, 0x85, 0xc1, 0x0d, 0xb4, 0xe6, 0x94, 0x48, 0x1d, 0x51, 0xa2, 0x9d, 0xde, 0x39, 0xd4, 0x47,
	0xae, 0x86, 0x9a, 0xbb, 0xd9, 0x34, 0x84, 0x60, 0x9f, 0x73, 0x36, 0xc3, 0x85, 0xc1, 0x7d, 0xf6,
	0xcc, 0x6e, 0xfa, 0x0a, 0x2a, 0xaf, 0x5c, 0x2e, 0xd1, 0xd1, 0xee, 0xe0, 0x5e, 0x0a, 0x41, 0xfb,
	0x7b, 0xd9, 0xad, 0x72, 0xeb, 0xbd, 0xc1, 0xee, 0x1b, 0x46, 0x35, 0xf3, 0xfd, 0x2e, 0x3e, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x0d, 0x9b, 0x23, 0xf7, 0xa8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/messages.helloService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
}

// UnimplementedHelloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServiceServer struct {
}

func (*UnimplementedHelloServiceServer) Hello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.helloService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.helloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/src/pbMessages/messages.proto",
}

// HeartbeatServiceClient is the client API for HeartbeatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeartbeatServiceClient interface {
	Heartbeat(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
}

type heartbeatServiceClient struct {
	cc *grpc.ClientConn
}

func NewHeartbeatServiceClient(cc *grpc.ClientConn) HeartbeatServiceClient {
	return &heartbeatServiceClient{cc}
}

func (c *heartbeatServiceClient) Heartbeat(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/messages.heartbeatService/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeartbeatServiceServer is the server API for HeartbeatService service.
type HeartbeatServiceServer interface {
	Heartbeat(context.Context, *Ping) (*Pong, error)
}

// UnimplementedHeartbeatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHeartbeatServiceServer struct {
}

func (*UnimplementedHeartbeatServiceServer) Heartbeat(ctx context.Context, req *Ping) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}

func RegisterHeartbeatServiceServer(s *grpc.Server, srv HeartbeatServiceServer) {
	s.RegisterService(&_HeartbeatService_serviceDesc, srv)
}

func _HeartbeatService_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeartbeatServiceServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.heartbeatService/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeartbeatServiceServer).Heartbeat(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeartbeatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.heartbeatService",
	HandlerType: (*HeartbeatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Heartbeat",
			Handler:    _HeartbeatService_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/src/pbMessages/messages.proto",
}

// WorkServiceClient is the client API for WorkService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkServiceClient interface {
	Work(ctx context.Context, in *WorkRequest, opts ...grpc.CallOption) (*WorkResponse, error)
}

type workServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkServiceClient(cc *grpc.ClientConn) WorkServiceClient {
	return &workServiceClient{cc}
}

func (c *workServiceClient) Work(ctx context.Context, in *WorkRequest, opts ...grpc.CallOption) (*WorkResponse, error) {
	out := new(WorkResponse)
	err := c.cc.Invoke(ctx, "/messages.workService/Work", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkServiceServer is the server API for WorkService service.
type WorkServiceServer interface {
	Work(context.Context, *WorkRequest) (*WorkResponse, error)
}

// UnimplementedWorkServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkServiceServer struct {
}

func (*UnimplementedWorkServiceServer) Work(ctx context.Context, req *WorkRequest) (*WorkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Work not implemented")
}

func RegisterWorkServiceServer(s *grpc.Server, srv WorkServiceServer) {
	s.RegisterService(&_WorkService_serviceDesc, srv)
}

func _WorkService_Work_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkServiceServer).Work(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.workService/Work",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkServiceServer).Work(ctx, req.(*WorkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.workService",
	HandlerType: (*WorkServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Work",
			Handler:    _WorkService_Work_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/src/pbMessages/messages.proto",
}
